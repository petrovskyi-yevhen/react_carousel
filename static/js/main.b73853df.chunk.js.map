{"version":3,"sources":["components/Carousel.tsx","images/bgd.png","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleButton","step","props","images","frameSize","lastItemIndex","length","nextItemIndex","setState","this","itemWidth","animationDuration","infinity","className","style","width","transition","map","img","index","transform","src","alt","disabled","type","onClick","height","viewBox","fill","xmlns","d","fillRule","clipRule","React","Component","App","backgroundImage","Background","backgroundRepeat","htmlFor","id","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b73853df.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    currentItemIndex: 0,\n  };\n\n  handleButton = (step: number) => () => {\n    const { images, frameSize } = this.props;\n    const { currentItemIndex } = this.state;\n    const lastItemIndex = images.length - frameSize;\n    const firstItemIndex = 0;\n    let nextItemIndex = currentItemIndex + step;\n\n    if (step < 0) {\n      if (currentItemIndex === firstItemIndex) {\n        nextItemIndex = lastItemIndex;\n      } else if (nextItemIndex < firstItemIndex) {\n        nextItemIndex = firstItemIndex;\n      }\n    }\n\n    if (step > 0) {\n      if (currentItemIndex === lastItemIndex) {\n        nextItemIndex = firstItemIndex;\n      } else if (nextItemIndex > lastItemIndex) {\n        nextItemIndex = lastItemIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextItemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {\n            images.map((img, index) => {\n              return (\n                <li\n                  className=\"Carousel__item\"\n                  key={img}\n                  style={{\n                    transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    width={itemWidth}\n                    src={img}\n                    alt={`emoji-${index + 1}`}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n\n        <div className=\"Carousel__btn\">\n          <button\n            className=\"Carousel__buttons\"\n            disabled={currentItemIndex <= 0 && !infinity}\n            type=\"button\"\n            data-cy=\"prev\"\n            onClick={this.handleButton(-step)}\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className=\"arrowleft\"\n                d=\"M11.9481 14.8285L10.5339 16.2427L6.29122 12L10.5339 7.7574L11.9481 9.17161L10.1196 11H17.6568V13H10.1196L11.9481 14.8285Z\"\n                fill=\"currentColor\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M4.22183 19.7782C-0.0739419 15.4824 -0.0739419 8.51759 4.22183 4.22183C8.51759 -0.0739419 15.4824 -0.0739419 19.7782 4.22183C24.0739 8.51759 24.0739 15.4824 19.7782 19.7782C15.4824 24.0739 8.51759 24.0739 4.22183 19.7782ZM5.63604 18.364C2.12132 14.8492 2.12132 9.15076 5.63604 5.63604C9.15076 2.12132 14.8492 2.12132 18.364 5.63604C21.8787 9.15076 21.8787 14.8492 18.364 18.364C14.8492 21.8787 9.15076 21.8787 5.63604 18.364Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </button>\n\n          <button\n            className=\"Carousel__buttons\"\n            disabled={\n              currentItemIndex >= images.length - frameSize && !infinity\n            }\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.handleButton(step)}\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className=\"arrow\"\n                d=\"M12.0519 14.8285L13.4661 16.2427L17.7088 12L13.4661 7.7574L12.0519 9.17161L13.8804 11H6.34321V13H13.8803L12.0519 14.8285Z\"\n                fill=\"currentColor\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M19.7782 19.7782C24.0739 15.4824 24.0739 8.51759 19.7782 4.22183C15.4824 -0.0739417 8.51759 -0.0739417 4.22183 4.22183C-0.0739417 8.51759 -0.0739417 15.4824 4.22183 19.7782C8.51759 24.0739 15.4824 24.0739 19.7782 19.7782ZM18.364 18.364C21.8787 14.8492 21.8787 9.15076 18.364 5.63604C14.8492 2.12132 9.15076 2.12132 5.63604 5.63604C2.12132 9.15076 2.12132 14.8492 5.63604 18.364C9.15076 21.8787 14.8492 21.8787 18.364 18.364Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/bgd.1cfcc646.png\";","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport Background from './images/bgd.png';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinity: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          backgroundImage: `url(${Background})`,\n          backgroundRepeat: 'no-repeat',\n        }}\n      >\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"App__inputs\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"App__label\"\n          >\n            Item Width:\n            <input\n              id=\"itemId\"\n              className=\"App__input\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"App__label\"\n          >\n            Frame Size:\n            <input\n              id=\"frameId\"\n              className=\"App__input\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step:\n            <input\n              id=\"stepId\"\n              className=\"App__input\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animation\"\n            className=\"App__label\"\n          >\n            Animation:\n            <input\n              id=\"animation\"\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              min={500}\n              max={5000}\n              step={1000}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinity\"\n            className=\"App__label\"\n          >\n            Infinity:\n            <input\n              id=\"infinity\"\n              className=\"App__input\"\n              type=\"checkbox\"\n              onChange={(event) => {\n                this.setState({\n                  infinity: event.target.checked,\n                });\n              }}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}